# based on  Brick(2, 4): x = [0,2], y = [0,4]
ACTION2TREE = { True:  {(0,0):1,
                        (0,1):2, (0,-1):3, (1,0):4, (-1,0):5,
                        (0,2):6, (0,-2):7},
                False: {(0,0):8,
                        (1,0):9, (-1,0):10,
                        (1,1):11, (0,1):12, (-1,1):13, (1,-1):14, (0,-1):15, (-1,-1):16} }
TREE2ACTION = { 1 : (0, (0,0,1)),
                2 : (0, (0,1,1)),  3 : (0, (0,-1,1)), 4 : (0, (1,0,1)), 5 : (0, (-1,0,1)),
                6 : (0, (0,2,1)),  7 : (0, (0,-2,1)),
                8 : (1, (0,0,1)),
                9 : (1, (1,0,1)),  10: (1, (-1,0,1)),
                11: (1, (1,1,1)),  12: (1, (0,1,1)),  13: (1, (-1,1,1)),
                14: (1, (1,-1,1)), 15: (1, (0,-1,1)), 16: (1, (-1,-1,1)), }

M_A2T = 16
CONNECT_TYPE = 34
MULTI_A2T = {
    ():0, (1,):1, (2,):2, (3,):3, (4,):4, (5,):5, (6,):6, (7,):7, 
    (8,):8, (9,):9, (10,):10,
    (11,):11, (12,):12, (13,):13, (14,):14, (15,):15, (16,):16, 
    (4, 5):  M_A2T+1,
    (6, 7):  M_A2T+2,  (6, 14):  M_A2T+3,  (6, 15):  M_A2T+4,  (6, 16):  M_A2T+5,
    (7, 11): M_A2T+6,  (11, 14): M_A2T+7,  (11, 15): M_A2T+8,  (11, 16): M_A2T+9,
    (7, 12): M_A2T+10, (12, 14): M_A2T+11, (12, 15): M_A2T+12, (12, 16): M_A2T+13,
    (7, 13): M_A2T+14, (13, 14): M_A2T+15, (13, 15): M_A2T+16, (13, 16): M_A2T+17   }
MULTI_T2A = {   0:[], 1:[1], 2:[2], 3:[3], 4:[4], 5:[5], 6:[6], 7:[7], 
                8:[8], 9:[9], 10:[10],
                11:[11], 12:[12], 13:[13], 14:[14], 15:[15], 16:[16], 
                M_A2T+1: (4, 5), 
                M_A2T+2: (6, 7),  M_A2T+3: (6, 14),  M_A2T+4: (6, 15),  M_A2T+5: (6, 16),
                M_A2T+6: (7, 11), M_A2T+7: (11, 14), M_A2T+8: (11, 15), M_A2T+9: (11, 16),
                M_A2T+10: (7, 12), M_A2T+11: (12, 14), M_A2T+12: (12, 15), M_A2T+13: (12, 16),
                M_A2T+14: (7, 13), M_A2T+15: (13, 14), M_A2T+16: (13, 15), M_A2T+17: (13, 16)   }
MULTI_A2T_DOWN = {
    ():0, (1,):1, (2,):2, (3,):3, (4,):4, (5,):5, (6,):6, (7,):7, 
    (8,):8, (9,):9, (10,):10,
    (11,):11, (12,):12, (13,):13, (14,):14, (15,):15, (16,):16, 
    (4, 5):  M_A2T+1,
    (6, 7):  M_A2T+2,  (7, 13):  M_A2T+3,  (7, 12):  M_A2T+4,  (7, 11): M_A2T+5,
    (6, 16): M_A2T+6,  (13, 16): M_A2T+7,  (12, 16): M_A2T+8,  (11, 16): M_A2T+9,
    (6, 15): M_A2T+10, (13, 15): M_A2T+11, (12, 15): M_A2T+12, (11, 15): M_A2T+13,
    (6, 14): M_A2T+14, (13, 14): M_A2T+15, (12, 14): M_A2T+16, (11, 14): M_A2T+17   }
MULTI_T2A_DOWN = {  0:[], 1:[1], 2:[2], 3:[3], 4:[4], 5:[5], 6:[6], 7:[7], 
                    8:[8], 9:[9], 10:[10],
                    11:[11], 12:[12], 13:[13], 14:[14], 15:[15], 16:[16], 
                    M_A2T+1: (4, 5), 
                    M_A2T+2: (6, 7),  M_A2T+3: (7, 13), M_A2T+4: (7, 12),  M_A2T+5: (7, 11),
                    M_A2T+6: (6, 16), M_A2T+7: (13, 16), M_A2T+8: (12, 16), M_A2T+9: (11, 16),
                    M_A2T+10: (6, 15), M_A2T+11: (13, 15), M_A2T+12: (12, 15), M_A2T+13: (11, 15),
                    M_A2T+14: (6, 14), M_A2T+15: (13, 14), M_A2T+16: (12, 14), M_A2T+17: (11, 14)   }
